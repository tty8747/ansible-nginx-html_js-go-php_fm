---
- hosts: web
  gather_facts: yes
  remote_user: goto
  become: yes
  become_user: root
  become_method: sudo
  vars:
   #site: tty8747.devops.srwx.net
    site: goapp.aaaj.ru
    letsencrypts_email: tty8747@gmail.com

  tasks:

#   - name: Upgrade 
#     apt: upgrade=dist update_cache=yes

    - name: Installing nginx
      apt:
          allow_unauthenticated=yes
          name=nginx
          state=present
      notify: start nginx

    - name: сreate directory /opt/acme
      file:
        path=/opt/acme
        state=directory

    - name: сreate directory /srv/www
      file:
        path=/srv/www
        state=directory

    - name: сreate directory /srv/phpapp
      file:
        path=/srv/phpapp
        state=directory

    - name: сreate directory /srv/goapi
      file:
        path=/srv/goapi
        state=directory

    - name: Push config nginx
      template: 
        src=templates/nginxTemplate.j2
        dest=/etc/nginx/sites-available/{{ site }} 
        owner=goto
        group=www-data
        mode=0644
      notify: reload nginx

    - name: rm default
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: reload nginx

    - name: create symlink
      file: src=/etc/nginx/sites-available/{{ site }} dest=/etc/nginx/sites-enabled/{{ site }} state=link
      notify: reload nginx

    - name: Install letsencrypt
      apt: 
        allow_unauthenticated=yes
        name=letsencrypt
        state=latest

    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /opt/acme/ -d {{ site }} -m {{ letsencrypts_email }} --agree-tos

    - name: Gen dhparam
      shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
      notify: reload nginx

    - name: Push config nginx
      template: 
        src=templates/nginxSslTemplate.j2
        dest=/etc/nginx/sites-available/{{ site }} 
        owner=goto
        group=www-data
        mode=0644
      notify: reload nginx

    - name: letsencrypt autoupdate
      cron:
        name: get cert
        minute: "0"
        hour: "4"
        weekday: "1"
        job: "letsencrypt renew && service nginx reload" 

  handlers:

    - name: restart nginx
      service: name=nginx state=restarted

    - name: reload nginx
      service: name=nginx state=reloaded

    - name: start nginx
      service: name=nginx state=started
